<!DOCTYPE html>
<html lang="en">
<head>
    @*<link href="~/Content/LiuBoWen/NotifyIndex.css" type="text/css" rel="stylesheet" />*@
    <link href="~/Content/Gao_Fu/NotifyIndex.css" type="text/css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script>
        window.onload = function () {
            $.ajax({
                url: "/NotifyInfo/UpdateStatus/",
                method: "post",
                success: function () {
                    console.log("over...");
                },
                error: function () {
                    alert("错误");
                },
            });
        }
    </script>
</head>

<body>
    <script>
        function LeapAndKillSmall(value) {
            var grandfathernode = value.parentElement.parentElement;
            //将未读标识置空
            grandfathernode.children[0].children[0].innerHTML = "";
        }
    </script>
    @while (true)
    {
        //获取无数据时的异常处理
        try
        {
            //计数有多少信息
            var syscount = 0;
            foreach (var item in (List<String>)ViewBag.SysList)
            {
                ++syscount;
            }
            //动态给出系统数组大小
            string[] SysArray = new string[syscount];
            int i = 0;
            //将视图包里面的数据全部放入系统数组
            foreach (var item in (List<String>)ViewBag.SysList)
            {
                SysArray[i] = item;
                ++i;
            }
            for (i = 0; i < syscount; ++i)
            {
                //系统信息为4个一组，每4个则创建一个ul
                if (i % 3 == 0)
                {
                    <ul class="SysInfo">
                        <li><small class="NEW">[NEW]</small></li>
                        @for (var j = i; j < i + 3; ++j)//标签判断，是系统内容的话就是一个a标签
                        {
                            if (j != (i + 1))
                            {
                                <li><div class="" style="display:inline-block">@SysArray[j]</div></li>
                            }
                            else
                            {
                                <li><a class="Syscontent" onclick="LeapAndKillSmall(this)">@SysArray[j]</a></li>
                            }
                        }
                        <li><button class="DeleteNotifyInfo"onclick="deleteSysnotifyinfo(this)">删除</button></li>
                    </ul>
                }
            }
        }
        catch { }
        try
        {
            var rescount = 0;
            foreach (var item in (List<String>)ViewBag.ResList)
            {
                ++rescount;
            }
            string[] ResArray = new string[rescount];
            int i = 0;
            foreach (var item in (List<String>)ViewBag.ResList)
            {
                ResArray[i] = item;
                ++i;
            }
            for (i = 0; i < rescount; ++i)
            {
                if (i % 7 == 0)
                {
                    <ul class="ResInfo">
                        <li><small class="NEW">[NEW]</small></li>
                        @for (var j = i; j < i + 7; ++j)
                        {
                            if (j != (i + 5))
                            {
                                <li><p class="" style="display:inline-block">@ResArray[j]</p></li>
                            }
                            else
                            {
                                <li><a class="Rescontent"onclick="LeapAndKillSmall(this)">@ResArray[j]</a></li>
                            }
                        }
                        <li><button class="DeleteNotifyInfo"onclick="deleteResnotifyinfo(this)">删除</button></li>
                    </ul>
                }
            }
        }
        catch
        { }
        try
        {
            //计数有多少信息
            var sysreadcount = 0;
            foreach (var item in (List<String>)ViewBag.SysReadList)
            {
                ++sysreadcount;
            }
            //动态给出系统数组大小
            string[] SysReadArray = new string[sysreadcount];
            int i = 0;
            //将视图包里面的数据全部放入系统数组
            foreach (var item in (List<String>)ViewBag.SysReadList)
            {
                SysReadArray[i] = item;
                ++i;
            }
            for (i = 0; i < sysreadcount; ++i)
            {
                //系统信息为4个一组，每4个则创建一个ul
                if (i % 3 == 0)
                {
                    <ul class="SysReadInfo">
                        <li><small class="NEW"></small></li>
                        @for (var j = i; j < i + 3; ++j)//标签判断，是系统内容的话就是一个a标签
                        {
                            if (j != (i + 1))
                            {
                                <li><div class="" style="display:inline-block">@SysReadArray[j]</div></li>
                            }
                            else
                            {
                                <li><a class="SysReadcontent" onclick="LeapAndKillSmall(this)">@SysReadArray[j]</a></li>
                            }
                        }
                        <li><button class="DeleteNotifyInfo"onclick="deleteSysnotifyinfo(this)">删除</button></li>
                    </ul>
                }
            }
        }
        catch { }
        try
        {
            var resreadcount = 0;
            foreach (var item in (List<String>)ViewBag.ResReadList)
            {
                ++resreadcount;
            }
            string[] ResReadArray = new string[resreadcount];
            int i = 0;
            foreach (var item in (List<String>)ViewBag.ResReadList)
            {
                ResReadArray[i] = item;
                ++i;
            }
            for (i = 0; i < resreadcount; ++i)
            {
                if (i % 7 == 0)
                {
                    <ul class="ResReadInfo">
                        <li><small class="NEW"></small></li>
                        @for (var j = i; j < i + 7; ++j)
                        {
                            if (j != (i + 5))
                            {
                                <li><p class="" style="display:inline-block">@ResReadArray[j]</p></li>
                            }
                            else
                            {
                                <li><a class="ResReadcontent"onclick="LeapAndKillSmall(this)">@ResReadArray[j]</a></li>
                            }
                        }
                        <li><button class="DeleteNotifyInfo" onclick="deleteResnotifyinfo(this)">删除</button></li>
                    </ul>
                }
            }
        }
        catch
        { }
        break;
    }
    <script>
        //系统所有未读信息标记(包括关注通知)
        var SysInfo = document.getElementsByClassName("SysInfo");
        for (var i = 0; i < SysInfo.length ; i++) {
            SysInfo[i].children[1].children[0].className = "sys";
            SysInfo[i].children[3].children[0].className = "Time";
        }
        //系统所有已读信息标记
        var SysReadInfo = document.getElementsByClassName("SysReadInfo");
        for (var i = 0; i < SysReadInfo.length; i++) {
            SysReadInfo[i].children[1].children[0].className = "sys";
            SysReadInfo[i].children[3].children[0].className = "Time";
        }

        //用户所有未读的动态消息标记
        var ResInfo = document.getElementsByClassName("ResInfo");
        for (var i = 0; i < ResInfo.length; i++) {
            ResInfo[i].children[1].children[0].className = "ReplyUserName";
            ResInfo[i].children[2].children[0].className = "str1";
            ResInfo[i].children[3].children[0].className = "WorkType";
            ResInfo[i].children[4].children[0].className = "WorkName";
            ResInfo[i].children[5].children[0].className = "Quote";
            ResInfo[i].children[7].children[0].className = "Time";
        }
    </script>
    <script>
        function deleteSysnotifyinfo(value) {
            var grandfathernode = value.parentElement.parentElement;
            //获取回复者
            var ReplyUserName = grandfathernode.children[1].children[0].innerHTML;
            //获取发送的内容
            var SystemContent = grandfathernode.children[2].children[0].innerHTML;
            //获取时间
            var Time = grandfathernode.children[3].children[0].innerHTML;
            $.ajax({
                url: "/NotifyInfo/DeleteNotifyInfo/",
                method: "post",
                data: {
                    ReplyUserName: ReplyUserName,
                    SystemContent: SystemContent,
                    Time: Time
                },
                success: function (data) {
                    //删除对应标签
                    value.parentElement.parentElement.parentElement.removeChild(value.parentElement.parentElement);
                },
                error: function (data) {
                }
            })
        }
        function deleteResnotifyinfo(value) {
            var grandfathernode = value.parentElement.parentElement;
            //获取回复者
            var ReplyUserName = grandfathernode.children[1].children[0].innerHTML;
            //获取发送的内容
            var SystemContent = grandfathernode.children[6].children[0].innerHTML;
            //获取时间
            var Time = grandfathernode.children[7].children[0].innerHTML;
            $.ajax({
                url: "/NotifyInfo/DeleteNotifyInfo/",
                method: "post",
                data: {
                    ReplyUserName: ReplyUserName,
                    SystemContent: SystemContent,
                    Time: Time
                },
                success: function (data) {
                    //删除对应标签
                    value.parentElement.parentElement.parentElement.removeChild(value.parentElement.parentElement);
                },
                error: function (data) {
                }
            })
        }
    </script>
</body>

</html>
